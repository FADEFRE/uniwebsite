@use "@/assets/styles/util/colors.scss" as *;
@use "@/assets/styles/util/spacing.scss" as *;

@mixin verticalList($gapSize) {
  display: flex;
  flex-direction: column;
  width: 100%;

  @if $gapSize == small {
    gap: 0.5rem;
  } @else if $gapSize == big {
    gap: 1.5rem;
  } @else if $gapSize == mid {
    gap: 1rem;
  }
}

@mixin verticalListItem($background-color) {
  background-color: $background-color;
  display: flex;
  justify-content: space-between;
  border-left: 3px solid $red;
  width: 100%;
}

@mixin singleContainer() {
  width: fit-content;
  max-width: 100%;
  background-color: $white;
  display: flex;
  padding: 4rem;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 2rem;
}

@mixin basicContainer() {
  width: auto;
  background-color: $white;
  padding: 1.5rem 1.5rem;

  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.5rem;
}

@mixin panelComponent() {
  width: 100%;
  padding: 0.5rem 0rem;
  background-color: $white;
  border-top: 1px solid $dark-gray;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 0.5rem;
}

@mixin screenSplit() {
  width: 100%;
  display: flex;
  align-items: flex-start;
  gap: 1rem;
}

@mixin rightArrow() {
  transform: rotate(-90deg);
}

@mixin smallHighlightBox() {
  width: max-content;
  padding: 0.5rem 1rem;
  border: none;

  display: flex;

  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

@mixin ellipsisTextOverflow() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin trashIconAnimation() {
  background-color: transparent;
  padding: 0.5rem 1.2rem;
  transition: 0.1s ease-in-out;
  cursor: pointer;
  &:hover {
    background: $white-hover;
  }
}

@mixin searchFieldContainer() {
  width: 100%;
  display: flex;
  flex-direction: column;
  position: relative;

  & .p-inputtext {
    &:hover {
      background-color: $white-hover;
    }
  }

  & .search-icon {
    width: 1rem;
    height: 1rem;
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
  }
}
